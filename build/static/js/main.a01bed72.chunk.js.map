{"version":3,"sources":["components/Statistics/Statistics.js","components/NotificationMsg/NotificationMsg.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","NotificationMsg","message","FeedbackOptions","options","onLeaveFeedback","className","map","option","name","onClick","Section","title","children","App","state","e","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAAe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,4BAAIJ,IACJ,4BAAIC,IACJ,4BAAIC,IACJ,4BAAIC,IACJ,8BAAIC,EAAJ,UCbS,SAASC,EAAT,GAAuC,IAAZC,EAAW,EAAXA,QACxC,OAAO,4BAAIA,ICDE,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKC,UAAU,UAAf,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEF,UAAU,MAEVG,KAAMD,EACNE,QAASL,EAJX,SAMGG,GAJIA,QCNA,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASP,UAAU,MAAnB,UACE,oBAAIA,UAAU,QAAd,SAAuBM,IACtBC,K,ICGDC,E,4MACJC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,gBAAkB,SAAAW,GAChB,IAAMR,EAASQ,EAAEC,cAAcR,KAC/B,EAAKS,UAAS,SAAAC,GAAS,sBACpBX,EAASW,EAAUX,GAAU,O,EAIlCY,mBAAqB,WACnB,MAA+B,EAAKL,MAEpC,OAFA,EAAQnB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBuB,gCAAkC,WAChC,IAAMC,EAAgB,EAAKF,qBAC3B,GAAsB,IAAlBE,EAAJ,CAGA,IAAQ1B,EAAS,EAAKmB,MAAdnB,KAER,OADe2B,KAAKC,MAAc,IAAP5B,EAAc0B,K,4CAI3C,WACE,IAAMvB,EAAQ0B,KAAKL,qBACbpB,EAAqByB,KAAKJ,kCAChC,EAA+BI,KAAKV,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBM,EAAUsB,OAAOC,KAAKF,KAAKV,OAEjC,OACE,eAACJ,EAAD,CAASC,MAAM,wBAAf,UACE,cAACT,EAAD,CACEC,QAASA,EACTC,gBAAiBoB,KAAKpB,kBAEb,IAAVN,EACC,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAACC,EAAD,CAAiBC,QAAQ,6B,GAnDjB0B,aA0DHd,ICnDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a01bed72.chunk.js","sourcesContent":["export default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      <p>{good}</p>\r\n      <p>{neutral}</p>\r\n      <p>{bad}</p>\r\n      <p>{total}</p>\r\n      <p>{positivePercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n","export default function NotificationMsg({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n","export default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className=\"counter\">\r\n      {options.map(option => (\r\n        <button\r\n          className=\"btn\"\r\n          key={option}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","export default function Section({ title, children }) {\r\n  return (\r\n    <section className=\"App\">\r\n      <h1 className=\"title\">{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","import './App.css';\nimport { Component } from 'react';\nimport Statistics from 'components/Statistics/Statistics';\nimport NotificationMsg from 'components/NotificationMsg/NotificationMsg';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\nimport Section from 'components/Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const option = e.currentTarget.name;\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    return result;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const totalFeedback = this.countTotalFeedback();\n    if (totalFeedback === 0) {\n      return;\n    }\n    const { good } = this.state;\n    const result = Math.round((good * 100) / totalFeedback);\n    return result;\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n        {total !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <NotificationMsg message=\"No feedback given\" />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}